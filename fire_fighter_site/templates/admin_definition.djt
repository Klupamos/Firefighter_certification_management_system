{% extends "base_template.djt" %}

{% block head %}
<!--
<link rel="stylesheet" type"text/css" href="/static/multiselect.css" />
<script src="/static/multiselect.js"></script>
<script>
$(document).ready(function(){
    jQuery.each($("select[multiple]"), function () {  
         // "Locations" can be any label you want  
         SelectFilter.init(this.id, "Label", 0, "/media/");  
    });
});
</script>
-->
<script>
function get_cookie ( cookie_name ){
    var results = document.cookie.match ( '(^|;) ?' + cookie_name + '=([^;]*)(;|$)' );
    if ( results )
        return ( unescape ( results[2] ) );
    else
        return null;
}

var r = Array();
function display_results(index, element){
     // 'this' provided by jQuery.proxy()
     me = jQuery(element);
     if (this[element.name] !== undefined){

         r.push(me);
         if (me.is('[type="checkbox"]')){
//            console.log(me.attr('checked'));
//            me.attr('checked', this[element.name]);
//            console.log(me.attr('checked'));
         }else{
            me.val(this[element.name]);
         }
     }
 }

var debug_data; // set to the result of the jQuery.post()
function AjaxPost(destination_url, me){
    r = Array();
    var sel_option = jQuery(me).children().filter(":selected");
    var this_form = jQuery(me).parents("form");

    if (!(parseInt(sel_option.val()) > 0)){
        return false;
    }
    // Note:
    // NaN > 0 : false

    return jQuery.post(
        destination_url,
        {
            object_id: sel_option.val(),
            csrfmiddlewaretoken: get_cookie("csrftoken") //for Cross Site Request Forgery checking
            // note: can travers DOM to access parents form's csrfmiddlewaretoken input
        }
    ).done(function(data){
        debug_data = data;
        if (data[0] == true){
            console.log(data[1]);
            this_form.find('[name]').map(jQuery.proxy(display_results, data[1]))
        }
    }).fail(function(data){
        debug_data = data;
    });
};
var x;
$(document).ready(function(){
    $("#requirement_form #id_selection").change(function(){
        AjaxPost("{{requirement_form.pull_addr}}", $("#requirement_form #id_selection"));
    });

    $("#certification_form #id_selection").change(function(){
        AjaxPost("{{certification_form.pull_addr}}", $("#certification_form #id_selection"));
    });
    
    jQuery("form").submit(function(event){
        event.preventDefault();
        var me = jQuery(this);
        jQuery.post(
            me.attr('action'),
            me.serialize()
        ).done(function(data) {
            debug_data = data;
            console.log(data);
            if (data[0] === true){
                me.find('[name="selection"] option:selected').text(
                    me.find('[name="name"]').val()
                );

                if (me.attr('id') == 0){


                }

                // caution: extremely brittle code to update child certification and requirement choice fields
                var value = data[2];
                var name = "child_" + me.attr('action').split('/')[4] + "s";
                $('form[id="certification_form"] [name="'+ name + '"] option[value="'+ value +'"]').text(
                    me.find('[name="name"]').val()
                )
            }else{
                alert(data[1]);
            }
        }).fail(function(data){
            debug_data = data;
        });

    });

});
</script>
{%endblock %}

{% block content %}
{% if requirement_form %}
<form id="requirement_form" action="{{requirement_form.push_addr}}" method="POST">
    {% csrf_token %}
    <ul>
    {{ requirement_form.elements.as_ul }}
    </ul>
    <input type="submit" />
</form>
{% endif %}

{% if certification_form %}
<form id="certification_form" action="{{certification_form.push_addr}}" method="POST">
    {% csrf_token %}
    <ul>
    {{ certification_form.elements.as_ul }}
    </ul>
    <input type="submit" />
</form>
{% endif %}
{% endblock %}